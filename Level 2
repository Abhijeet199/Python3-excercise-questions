#----------------------------------------#
Question 1
#----------------------------------------#

Write a program that calculates and prints the value according to the given formula:
Q = Square root of [(2 * C * d)/H]
Following are the fixed values of C and H:
C is 50. H is 30.
D is the variable whose values should be input to your program in a comma-separated sequence.
Example
Let us assume the following comma separated input sequence is given to the program:
100, 150, 180
The output of the program should be:
18, 22, 24

Hints:
use sqrt function

Solution:
from math import sqrt

C = 50
H = 30

d_list = input().split(',')

output_list = []
for d in d_list:
    output_list.append(str(int((sqrt(2 * C * int(d)/H)))))

print(", ".join(output_list))

#----------------------------------------#
Question 2
#----------------------------------------#

Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.
Note: i=0,1.., X-1; j=0,1,¡­Y-1.
Example
Suppose the following inputs are given to the program:
3, 5
Then, the output of the program should be:
[0, 0, 0, 0, 0]
[0, 1, 2, 3, 4]
[0, 2, 4, 6, 8]

Hints:
use for loop

Solution:
rows, columns = map(int, input().split(','))

lst = []
for row in range(rows):
    sub_list = []
    for col in range(columns):
        sub_list.append(row * col)
    lst.append(sub_list)

for row in lst:
    print(row)

#----------------------------------------#
Question 3
#----------------------------------------#

Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.
Suppose the following input is supplied to the program:
without, hello, bag, world
Then, the output should be:
bag, hello, without, world

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
word_list = input().split(",")
word_list.sort()
print(", ".join(word_list))

#----------------------------------------#
Question 4
#----------------------------------------#

Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.
Suppose the following input is supplied to the program:
Hello world
Practice makes perfect

Then, the output should be:
HELLO WORLD
PRACTICE MAKES PERFECT

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
paragraph = []

while 1:
    line = input()
    if line:
        paragraph.append(line.upper())
    else:
        break

for line in paragraph:
    print(line)

#----------------------------------------#
Question 5
#----------------------------------------#

Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.
i) with set()
ii) without set()

Suppose the following input is supplied to the program:
hello world and practice makes perfect and hello world again
Then, the output should be:
again and hello makes perfect practice world



Solution:
i)
word_list = list(set(input().split(" ")))
print(" ".join(sorted(word_list)))

ii)
word_list = input().split(" ")
new_list = []
for word in word_list:
    if word not in new_list:
        new_list.append(word)

print(" ".join(sorted(new_list)))

#----------------------------------------#
Question 6
#----------------------------------------#

Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.
Example:
0100,0011,1010,1001
Then the output should be:
1010
Notes: Assume the data is input by console.

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
bin_list = input().split(",")
ans_list = []
for binary in bin_list:
    dec = int(binary, 2)
    if dec % 5 == 0:
        ans_list.append(binary)

print(", ".join(ans_list))

#----------------------------------------#
Question 7
#----------------------------------------#

Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.
The numbers obtained should be printed in a comma-separated sequence on a single line.
i) Without List comprehension
ii) With List comprehension

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
i)
ans_list = []
for i in range(1000, 3001):
    s_int = str(i)
    if sum(1 for _ in range(4) if int(s_int[_]) % 2 == 0) == 4:
        ans_list.append(s_int)

print(", ".join(ans_list))

ii)
print(", ".join([str(x) for x in range(1000, 3001) if sum(1 for i in range(4) if int(str(x)[i]) % 2 == 0) == 4]))


#----------------------------------------#
Question 8
#----------------------------------------#

Write a program that accepts a sentence and calculate the number of letters and digits.
Suppose the following input is supplied to the program:
hello world! 123
Then, the output should be:
LETTERS 10
DIGITS 3

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
string = input()
letters = 0
digit = 0
for char in string:
    if char.isalpha():
        letters += 1
    if char.isdigit():
        digit += 1

print("LETTERS", letters)
print("DIGITS", digit)

#----------------------------------------#
Question 9
#----------------------------------------#

Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.
Suppose the following input is supplied to the program:
Hello world!
Then, the output should be:
UPPER CASE 1
LOWER CASE 9

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
string = input()
upper = 0
lower = 0
for char in string:
    if char.isupper():
        upper += 1
    if char.islower():
        lower += 1

print("UPPER CASE", upper)
print("LOWER CASE", lower)

#----------------------------------------#
Question 10
#----------------------------------------#

Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.
Suppose the following input is supplied to the program:
i) With string
ii) With integers
9
Then, the output should be:
11106

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
i)
n = input()
ans = 0

for i in range(1, 5):
    m = ''
    for j in range(i+1):
        m = n * j
    ans += int(m)
print(ans)

ii)
n = int(input())
ans = 0
for i in range(4):
    t = 0
    for j in range(i + 1):
        t = t * 10 + n
    ans += t

print(ans)


#----------------------------------------#
Question 11
#----------------------------------------#

Use list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.
Suppose the following input is supplied to the program:
1, 2, 3, 4, 5, 6, 7, 8, 9
Then, the output should be:
1, 9, 25, 49, 81

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
val_list = list(map(int, input().split(",")))
print(", ".join([str(val**2) for val in val_list if val % 2]))

#----------------------------------------#
Question 12
#----------------------------------------#

Write a program that computes the net amount of a bank account based a transaction log from console input. The transaction log format is shown as following:
D 100
W 200

D means deposit while W means withdrawal.
Suppose the following input is supplied to the program:
D 300
D 300
W 200
D 100
Then, the output should be:
500

and
D 400
D 300
W 10000
Then, the output should be:
700

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
net_amount = 0
while True:
    inp_s = input()
    if not inp_s:
        break
    inp = inp_s.split(" ")
    if inp[0] is "D":
        net_amount += eval(inp[1])
    elif inp[0] is "W":
        if eval(inp[1]) <= net_amount:
            net_amount -= eval(inp[1])
    else:
        break
print(net_amount)

#----------------------------------------#
Question 13
#----------------------------------------#

Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].

Hints:
Use filter() to filter some elements in a list.
Use lambda to define anonymous functions.

Solution
lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even_lst = list(filter(lambda n: n % 2 == 0, lst))
print(even_lst)

#----------------------------------------#
Question 14
#----------------------------------------#

Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].

Hints:
Use map() to generate a list.
Use lambda to define anonymous functions.

Solution
lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
sqr_lst = list(map(lambda n: n ** 2, lst))
print(sqr_lst)

#----------------------------------------#
Question 15
#----------------------------------------#

Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].

Hints:
Use map() to generate a list.
Use filter() to filter elements of a list.
Use lambda to define anonymous functions.

Solution
lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
new_lst = list(map(lambda n: n**2, filter(lambda m: m % 2 == 0, lst)))
print(new_lst)

#----------------------------------------#
Question 16
#----------------------------------------#

Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).

Hints:
Use filter() to filter elements of a list.
Use lambda to define anonymous functions.

Solution
evenNumbers = filter(lambda x: x%2==0, range(1,21))
print evenNumbers


#----------------------------------------#
Question 17
#----------------------------------------#

Write a program which can map() to make a list whose elements are square of numbers between 1 and 20 (both included).

Hints:
Use map() to generate a list.
Use lambda to define anonymous functions.

Solution
lst = list(map(lambda n: n ** 2, range(1, 21)))
print(lst)


#----------------------------------------#
Question 18
#----------------------------------------#

Define a class named Planet which has a static method called print_name.

Hints:

Use @staticmethod decorator to define class static method.

Solution
class Planet:
    @staticmethod
    def planet_name():
        print("Earth")


my_planet = Planet()
my_planet.planet_name()
Planet.planet_name()

#----------------------------------------#
Question 19
#----------------------------------------#

Define a class named Father and its subclass Son. 

Hints:
Use class Subclass(ParentClass) to define a subclass.

Solution:
class Father:
    def __init__(self):
        self.h = "3BHK"

    def home(self):
        return self.h


class Son(Father):
    pass


father = Father()
son = Son()

print(father.home())
print(son.home())

#----------------------------------------#
Question 20
#----------------------------------------#

Define a class named Circle which can be constructed by a radius. The Circle class has a method which can compute the area. 

Hints:
Use def methodName(self) to define a method.

Solution:
from math import pi


class Circle:
    def __init__(self, r):
        self.radius = r

    def area(self):
        return self.radius ** 2 * pi


radius = eval(input())
circle = Circle(radius)
print(circle.area())

#----------------------------------------#
Question 21
#----------------------------------------#

Define a class named Rectangle which can be constructed by a length and width. The Rectangle class has a method which can compute the area. 

Hints:
Use def methodName(self) to define a method.

Solution:
class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width

    def area(self):
        return self.length * self.width


l, w = map(int, input().split(","))
rectangle = Rectangle(l, w)
print(rectangle.area())


#----------------------------------------#
Question 22
#----------------------------------------#

Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.

Hints:
To override a method in super class, we can define a method with the same name in the super class.

Solution:
class Shape:
    def __init__(self, n):
        self.n = n

    def area(self):
        return 0


class Square(Shape):
    def area(self):
        return self.n ** 2


n = eval(input())
shape = Square(n)
print(shape.area())
